/* Test setup: DDL of the Tsurugi */
SELECT tg_execute_ddl('tsurugidb', '
    CREATE TABLE update_delete_int1 (
        col1 int PRIMARY KEY,
        col2 int
    )
');
 tg_execute_ddl 
----------------
 CREATE TABLE
(1 row)

SELECT tg_execute_ddl('tsurugidb', '
    CREATE TABLE update_delete_bigint1 (
        col1 int PRIMARY KEY,
        col2 bigint
    )
');
 tg_execute_ddl 
----------------
 CREATE TABLE
(1 row)

SELECT tg_execute_ddl('tsurugidb', '
    CREATE TABLE update_delete_real1 (
        col1 int PRIMARY KEY,
        col2 real
    )
');
 tg_execute_ddl 
----------------
 CREATE TABLE
(1 row)

SELECT tg_execute_ddl('tsurugidb', '
    CREATE TABLE update_delete_double1 (
        col1 int PRIMARY KEY,
        col2 double precision
    )
');
 tg_execute_ddl 
----------------
 CREATE TABLE
(1 row)

SELECT tg_execute_ddl('tsurugidb', '
    CREATE TABLE update_delete_char1 (
        col1 int PRIMARY KEY,
        col2 char(2)
    )
');
 tg_execute_ddl 
----------------
 CREATE TABLE
(1 row)

SELECT tg_execute_ddl('tsurugidb', '
    CREATE TABLE update_delete_varchar1 (
        col1 int PRIMARY KEY,
        col2 varchar(2)
    )
');
 tg_execute_ddl 
----------------
 CREATE TABLE
(1 row)

/* Test setup: DDL of the PostgreSQL */
CREATE FOREIGN TABLE update_delete_int1 (
    col1 int,
    col2 int
) SERVER tsurugidb;
CREATE FOREIGN TABLE update_delete_bigint1 (
    col1 int,
    col2 bigint
) SERVER tsurugidb;
CREATE FOREIGN TABLE update_delete_real1 (
    col1 int,
    col2 real
) SERVER tsurugidb;
CREATE FOREIGN TABLE update_delete_double1 (
    col1 int,
    col2 double precision
) SERVER tsurugidb;
CREATE FOREIGN TABLE update_delete_char1 (
    col1 int,
    col2 char(2)
) SERVER tsurugidb;
CREATE FOREIGN TABLE update_delete_varchar1 (
    col1 int,
    col2 varchar(2)
) SERVER tsurugidb;
/* DML */
---int
SELECT * FROM update_delete_int1 ORDER BY col1;
 col1 | col2 
------+------
(0 rows)

INSERT INTO update_delete_int1 (col1, col2) VALUES (1, 1);
SELECT * FROM update_delete_int1 ORDER BY col1;
 col1 | col2 
------+------
    1 |    1
(1 row)

UPDATE update_delete_int1 SET col3 = 2 WHERE col2 = 1;
ERROR:  column "col3" of relation "update_delete_int1" does not exist
LINE 1: UPDATE update_delete_int1 SET col3 = 2 WHERE col2 = 1;
                                      ^
SELECT * FROM update_delete_int1 ORDER BY col1;
 col1 | col2 
------+------
    1 |    1
(1 row)

UPDATE update_delete_int1 SET col2 = 2 WHERE col3 = 1;
ERROR:  column "col3" does not exist
LINE 1: UPDATE update_delete_int1 SET col2 = 2 WHERE col3 = 1;
                                                     ^
HINT:  Perhaps you meant to reference the column "update_delete_int1.col1" or the column "update_delete_int1.col2".
SELECT * FROM update_delete_int1 ORDER BY col1;
 col1 | col2 
------+------
    1 |    1
(1 row)

DELETE FROM update_delete_int1 WHERE col3 = 1;
ERROR:  column "col3" does not exist
LINE 1: DELETE FROM update_delete_int1 WHERE col3 = 1;
                                             ^
HINT:  Perhaps you meant to reference the column "update_delete_int1.col1" or the column "update_delete_int1.col2".
SELECT * FROM update_delete_int1 ORDER BY col1;
 col1 | col2 
------+------
    1 |    1
(1 row)

---bigint
SELECT * FROM update_delete_bigint1 ORDER BY col1;
 col1 | col2 
------+------
(0 rows)

INSERT INTO update_delete_bigint1 (col1, col2) VALUES (1, 1);
SELECT * FROM update_delete_bigint1 ORDER BY col1;
 col1 | col2 
------+------
    1 |    1
(1 row)

UPDATE update_delete_bigint1 SET col3 = 2 WHERE col2 = 1;
ERROR:  column "col3" of relation "update_delete_bigint1" does not exist
LINE 1: UPDATE update_delete_bigint1 SET col3 = 2 WHERE col2 = 1;
                                         ^
SELECT * FROM update_delete_bigint1 ORDER BY col1;
 col1 | col2 
------+------
    1 |    1
(1 row)

UPDATE update_delete_bigint1 SET col2 = 2 WHERE col3 = 1;
ERROR:  column "col3" does not exist
LINE 1: UPDATE update_delete_bigint1 SET col2 = 2 WHERE col3 = 1;
                                                        ^
HINT:  Perhaps you meant to reference the column "update_delete_bigint1.col1" or the column "update_delete_bigint1.col2".
SELECT * FROM update_delete_bigint1 ORDER BY col1;
 col1 | col2 
------+------
    1 |    1
(1 row)

DELETE FROM update_delete_bigint1 WHERE col3 = 1;
ERROR:  column "col3" does not exist
LINE 1: DELETE FROM update_delete_bigint1 WHERE col3 = 1;
                                                ^
HINT:  Perhaps you meant to reference the column "update_delete_bigint1.col1" or the column "update_delete_bigint1.col2".
SELECT * FROM update_delete_bigint1 ORDER BY col1;
 col1 | col2 
------+------
    1 |    1
(1 row)

---real
SELECT * FROM update_delete_real1 ORDER BY col1;
 col1 | col2 
------+------
(0 rows)

INSERT INTO update_delete_real1 (col1, col2) VALUES (1, 1.1);
SELECT * FROM update_delete_real1 ORDER BY col1;
 col1 | col2 
------+------
    1 |  1.1
(1 row)

UPDATE update_delete_real1 SET col3 = 2.2 WHERE col2 = 1.1;
ERROR:  column "col3" of relation "update_delete_real1" does not exist
LINE 1: UPDATE update_delete_real1 SET col3 = 2.2 WHERE col2 = 1.1;
                                       ^
SELECT * FROM update_delete_real1 ORDER BY col1;
 col1 | col2 
------+------
    1 |  1.1
(1 row)

UPDATE update_delete_real1 SET col2 = 2.2 WHERE col3 = 1.1;
ERROR:  column "col3" does not exist
LINE 1: UPDATE update_delete_real1 SET col2 = 2.2 WHERE col3 = 1.1;
                                                        ^
HINT:  Perhaps you meant to reference the column "update_delete_real1.col1" or the column "update_delete_real1.col2".
SELECT * FROM update_delete_real1 ORDER BY col1;
 col1 | col2 
------+------
    1 |  1.1
(1 row)

DELETE FROM update_delete_real1 WHERE col3 = 1.1;
ERROR:  column "col3" does not exist
LINE 1: DELETE FROM update_delete_real1 WHERE col3 = 1.1;
                                              ^
HINT:  Perhaps you meant to reference the column "update_delete_real1.col1" or the column "update_delete_real1.col2".
SELECT * FROM update_delete_real1 ORDER BY col1;
 col1 | col2 
------+------
    1 |  1.1
(1 row)

---double precision
SELECT * FROM update_delete_double1 ORDER BY col1;
 col1 | col2 
------+------
(0 rows)

INSERT INTO update_delete_double1 (col1, col2) VALUES (1, 1.1);
SELECT * FROM update_delete_double1 ORDER BY col1;
 col1 | col2 
------+------
    1 |  1.1
(1 row)

UPDATE update_delete_double1 SET col3 = 2.2 WHERE col2 = 1.1;
ERROR:  column "col3" of relation "update_delete_double1" does not exist
LINE 1: UPDATE update_delete_double1 SET col3 = 2.2 WHERE col2 = 1.1...
                                         ^
SELECT * FROM update_delete_double1 ORDER BY col1;
 col1 | col2 
------+------
    1 |  1.1
(1 row)

UPDATE update_delete_double1 SET col2 = 2.2 WHERE col3 = 1.1;
ERROR:  column "col3" does not exist
LINE 1: UPDATE update_delete_double1 SET col2 = 2.2 WHERE col3 = 1.1...
                                                          ^
HINT:  Perhaps you meant to reference the column "update_delete_double1.col1" or the column "update_delete_double1.col2".
SELECT * FROM update_delete_double1 ORDER BY col1;
 col1 | col2 
------+------
    1 |  1.1
(1 row)

DELETE FROM update_delete_double1 WHERE col3 = 1.1;
ERROR:  column "col3" does not exist
LINE 1: DELETE FROM update_delete_double1 WHERE col3 = 1.1;
                                                ^
HINT:  Perhaps you meant to reference the column "update_delete_double1.col1" or the column "update_delete_double1.col2".
SELECT * FROM update_delete_double1 ORDER BY col1;
 col1 | col2 
------+------
    1 |  1.1
(1 row)

---char
SELECT * FROM update_delete_char1 ORDER BY col1;
 col1 | col2 
------+------
(0 rows)

INSERT INTO update_delete_char1 (col1, col2) VALUES (1, 'ab');
SELECT * FROM update_delete_char1 ORDER BY col1;
 col1 | col2 
------+------
    1 | ab
(1 row)

UPDATE update_delete_char1 SET col2 = 'uvd' WHERE col2 = 'ab';
ERROR:  Failed to execute statement to Tsurugi. (13)
Tsurugi Server Error: VALUE_TOO_LONG_EXCEPTION (SQL-02058: evaluated value was too long)
SELECT * FROM update_delete_char1 ORDER BY col1;
 col1 | col2 
------+------
    1 | ab
(1 row)

UPDATE update_delete_char1 SET col3 = 'uv' WHERE col2 = 'ab';
ERROR:  column "col3" of relation "update_delete_char1" does not exist
LINE 1: UPDATE update_delete_char1 SET col3 = 'uv' WHERE col2 = 'ab'...
                                       ^
SELECT * FROM update_delete_char1 ORDER BY col1;
 col1 | col2 
------+------
    1 | ab
(1 row)

UPDATE update_delete_char1 SET col2 = 'uv' WHERE col3 = 'ab';
ERROR:  column "col3" does not exist
LINE 1: UPDATE update_delete_char1 SET col2 = 'uv' WHERE col3 = 'ab'...
                                                         ^
HINT:  Perhaps you meant to reference the column "update_delete_char1.col1" or the column "update_delete_char1.col2".
SELECT * FROM update_delete_char1 ORDER BY col1;
 col1 | col2 
------+------
    1 | ab
(1 row)

DELETE FROM update_delete_char1 WHERE col3 = 'ab';
ERROR:  column "col3" does not exist
LINE 1: DELETE FROM update_delete_char1 WHERE col3 = 'ab';
                                              ^
HINT:  Perhaps you meant to reference the column "update_delete_char1.col1" or the column "update_delete_char1.col2".
SELECT * FROM update_delete_char1 ORDER BY col1;
 col1 | col2 
------+------
    1 | ab
(1 row)

---varchar
SELECT * FROM update_delete_varchar1 ORDER BY col1;
 col1 | col2 
------+------
(0 rows)

INSERT INTO update_delete_varchar1 (col1, col2) VALUES (1, 'ab');
SELECT * FROM update_delete_varchar1 ORDER BY col1;
 col1 | col2 
------+------
    1 | ab
(1 row)

UPDATE update_delete_varchar1 SET col2 = 'uvd' WHERE col2 = 'ab';
ERROR:  Failed to execute statement to Tsurugi. (13)
Tsurugi Server Error: VALUE_TOO_LONG_EXCEPTION (SQL-02058: evaluated value was too long)
SELECT * FROM update_delete_varchar1 ORDER BY col1;
 col1 | col2 
------+------
    1 | ab
(1 row)

UPDATE update_delete_varchar1 SET col3 = 'uv' WHERE col2 = 'ab';
ERROR:  column "col3" of relation "update_delete_varchar1" does not exist
LINE 1: UPDATE update_delete_varchar1 SET col3 = 'uv' WHERE col2 = '...
                                          ^
SELECT * FROM update_delete_varchar1 ORDER BY col1;
 col1 | col2 
------+------
    1 | ab
(1 row)

UPDATE update_delete_varchar1 SET col2 = 'uv' WHERE col3 = 'ab';
ERROR:  column "col3" does not exist
LINE 1: ...DATE update_delete_varchar1 SET col2 = 'uv' WHERE col3 = 'ab...
                                                             ^
HINT:  Perhaps you meant to reference the column "update_delete_varchar1.col1" or the column "update_delete_varchar1.col2".
SELECT * FROM update_delete_varchar1 ORDER BY col1;
 col1 | col2 
------+------
    1 | ab
(1 row)

DELETE FROM update_delete_varchar1 WHERE col3 = 'ab';
ERROR:  column "col3" does not exist
LINE 1: DELETE FROM update_delete_varchar1 WHERE col3 = 'ab';
                                                 ^
HINT:  Perhaps you meant to reference the column "update_delete_varchar1.col1" or the column "update_delete_varchar1.col2".
SELECT * FROM update_delete_varchar1 ORDER BY col1;
 col1 | col2 
------+------
    1 | ab
(1 row)

/* Test teardown: DDL of the PostgreSQL */
DROP FOREIGN TABLE update_delete_int1;
DROP FOREIGN TABLE update_delete_bigint1;
DROP FOREIGN TABLE update_delete_real1;
DROP FOREIGN TABLE update_delete_double1;
DROP FOREIGN TABLE update_delete_char1;
DROP FOREIGN TABLE update_delete_varchar1;
/* Test teardown: DDL of the Tsurugi */
SELECT tg_execute_ddl('tsurugidb', 'DROP TABLE update_delete_int1');
 tg_execute_ddl 
----------------
 DROP TABLE
(1 row)

SELECT tg_execute_ddl('tsurugidb', 'DROP TABLE update_delete_bigint1');
 tg_execute_ddl 
----------------
 DROP TABLE
(1 row)

SELECT tg_execute_ddl('tsurugidb', 'DROP TABLE update_delete_real1');
 tg_execute_ddl 
----------------
 DROP TABLE
(1 row)

SELECT tg_execute_ddl('tsurugidb', 'DROP TABLE update_delete_double1');
 tg_execute_ddl 
----------------
 DROP TABLE
(1 row)

SELECT tg_execute_ddl('tsurugidb', 'DROP TABLE update_delete_char1');
 tg_execute_ddl 
----------------
 DROP TABLE
(1 row)

SELECT tg_execute_ddl('tsurugidb', 'DROP TABLE update_delete_varchar1');
 tg_execute_ddl 
----------------
 DROP TABLE
(1 row)

