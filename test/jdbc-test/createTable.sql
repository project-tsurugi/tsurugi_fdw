DROP TABLE IF EXISTS refresh_row_bad_ident_SQL;
DROP TABLE IF EXISTS refresh_row_bad_ident_space;
DROP TABLE IF EXISTS testerr;
DROP TABLE IF EXISTS allmixedup;
DROP TABLE IF EXISTS testbatch;
DROP TABLE IF EXISTS testunspecified;
DROP TABLE IF EXISTS rollbacktest;
DROP TABLE IF EXISTS testbatch_2;
DROP TABLE IF EXISTS testtz;
DROP TABLE IF EXISTS test_adaptive_fetch;
DROP TABLE IF EXISTS test_statement;
DROP TABLE IF EXISTS escapetest;
DROP TABLE IF EXISTS test_lock;
DROP TABLE IF EXISTS another_table;
DROP TABLE IF EXISTS b;
DROP TABLE IF EXISTS unused;
DROP TABLE IF EXISTS hold;
DROP TABLE IF EXISTS table1;
DROP TABLE IF EXISTS testbatch;
DROP TABLE IF EXISTS prep;
DROP TABLE IF EXISTS batchUpdCnt;
DROP TABLE IF EXISTS batchescape;
DROP TABLE IF EXISTS batchstring;
DROP TABLE IF EXISTS mixednulltest;
DROP TABLE IF EXISTS waffles;
DROP TABLE IF EXISTS test_date;
DROP TABLE IF EXISTS test_timestamp;
DROP TABLE IF EXISTS test_timestamptz;
DROP TABLE IF EXISTS timestamptztable;
DROP TABLE IF EXISTS timetztable;
DROP TABLE IF EXISTS timetable;
DROP TABLE IF EXISTS testtimezone;
DROP TABLE IF EXISTS testtime;
DROP TABLE IF EXISTS testdate;
DROP TABLE IF EXISTS charstream;
DROP TABLE IF EXISTS testsps_bad;
DROP TABLE IF EXISTS testsps_multiple;
DROP TABLE IF EXISTS allmixedup;
DROP TABLE IF EXISTS testrs;
DROP TABLE IF EXISTS teststring;
DROP TABLE IF EXISTS testint;
DROP TABLE IF EXISTS testnumeric;
DROP TABLE IF EXISTS testpgobject;
DROP TABLE IF EXISTS testtimestampwtz;
DROP TABLE IF EXISTS testtimestampwotz;
DROP TABLE IF EXISTS testtimestampdate;
DROP TABLE IF EXISTS hold;
DROP TABLE IF EXISTS testtime;
DROP TABLE IF EXISTS test_fetch;
DROP TABLE IF EXISTS hasdate;
DROP TABLE IF EXISTS second_table;
DROP TABLE IF EXISTS multicol;
DROP TABLE IF EXISTS nopkmulticol;
DROP TABLE IF EXISTS poolingtest;
DROP TABLE IF EXISTS testtimestamp;
DROP TABLE IF EXISTS testdbencoding;
DROP TABLE IF EXISTS allmixedup;
DROP TABLE IF EXISTS texttable;
DROP TABLE IF EXISTS inttable;
DROP TABLE IF EXISTS numeric_tab;
DROP TABLE IF EXISTS numeric_tab_3015;
DROP TABLE IF EXISTS double_tab;
DROP TABLE IF EXISTS float_tab_real;
DROP TABLE IF EXISTS float_tab_double;
DROP TABLE IF EXISTS float_tab_double;
DROP TABLE IF EXISTS tiny_int;
DROP TABLE IF EXISTS small_int;
DROP TABLE IF EXISTS int_tab;
DROP TABLE IF EXISTS DECIMAL_TAB;
DROP TABLE IF EXISTS decimal_scale;
DROP TABLE IF EXISTS number_fallback;
DROP TABLE IF EXISTS batch_tab_threshold5;
DROP TABLE IF EXISTS batch_tab_threshold0;
DROP TABLE IF EXISTS batchUpdCnt;
DROP TABLE IF EXISTS create_and_drop_table;
DROP TABLE IF EXISTS create_and_drop_table;
DROP TABLE IF EXISTS comparisontest;



CREATE TABLE refresh_row_bad_ident_SQL (id int PRIMARY KEY, "1 FROM refresh_row_bad_ident; SELECT 2; SELECT *" int);
CREATE TABLE refresh_row_bad_ident_space ("my key" int PRIMARY KEY);
--CREATE TABLE testerr (id int not null, val testdom not null);
--CREATE TABLE allmixedup (id int primary key, "DESCRIPTION" varchar(40), "fOo" varchar(3));
CREATE TABLE testbatch (pk INTEGER, col1 INTEGER);
CREATE TABLE testunspecified (pk INTEGER, bday TIMESTAMP);
CREATE TABLE rollbacktest (a int, str varchar);
CREATE TABLE testbatch_2 (pk INTEGER, col1 VARCHAR, col2 INTEGER);
CREATE TABLE testtz (col1 INTEGER, col2 TIMESTAMP);
CREATE TABLE test_adaptive_fetch (value VARCHAR);
CREATE TABLE test_statement (i int);
CREATE TABLE escapetest (ts timestamp, d date, t time, ")" varchar(5), """){a}'" varchar );
CREATE TABLE test_lock (name varchar);
CREATE TABLE another_table (a int);
CREATE TABLE b (i int);
CREATE TABLE unused (a int primary key);
CREATE TABLE hold(a int);
CREATE TABLE table1 (timestamp_without_time_zone_column timestamp without time zone, timestamp_with_time_zone_column timestamp with time zone, date_column date);
--CREATE TABLE testbatch (pk INTEGER, col1 INTEGER);
CREATE TABLE prep (a integer, b integer, d date);
CREATE TABLE batchUpdCnt (id varchar(512) primary key, data varchar(512));
CREATE TABLE batchescape (d date);
CREATE TABLE batchstring (a varchar);
CREATE TABLE mixednulltest (key int GENERATED BY DEFAULT AS IDENTITY primary key, value varchar);
CREATE TABLE waffles(sauce varchar);
CREATE TABLE test_date (dt date);
CREATE TABLE test_timestamp (dt timestamp);
CREATE TABLE test_timestamptz (dt timestamp with time zone);
CREATE TABLE timestamptztable (tstz timestamp with time zone);
CREATE TABLE timetztable (ttz time with time zone);
CREATE TABLE timetable (id int GENERATED BY DEFAULT AS IDENTITY, tt time);
CREATE TABLE testtimezone (seq integer, tstz timestamp with time zone, ts timestamp without time zone, t time without time zone, tz time with time zone, d date);
CREATE TABLE testtime (tm time, tz time with time zone);
CREATE TABLE testdate (v date);
CREATE TABLE charstream(cs varchar);
CREATE TABLE testsps_bad (data int);
CREATE TABLE testsps_multiple (data int);
CREATE TABLE allmixedup (id int primary key, "DESCRIPTION" varchar(40), "fOo" varchar(3));
CREATE TABLE testrs (id integer);
CREATE TABLE teststring (a varchar);
CREATE TABLE testint (a int);
CREATE TABLE testnumeric (t varchar, a numeric);
CREATE TABLE testpgobject (id integer PRIMARY KEY, d date);
CREATE TABLE testtimestampwtz (ts timestamp with time zone);
CREATE TABLE testtimestampwotz (ts timestamp without time zone);
CREATE TABLE testtimestampdate (ts date);
--CREATE TABLE hold (a int);
--CREATE TABLE testtime (tm time, tz time with time zone);
CREATE TABLE test_fetch (value integer);
CREATE TABLE hasdate (id int primary key, dt date, name varchar);
CREATE TABLE second_table (id1 int primary key, name1 varchar);
CREATE TABLE multicol (id1 int not null, id2 int not null, val varchar);
CREATE TABLE nopkmulticol (id1 int not null, id2 int not null, val varchar);
CREATE TABLE poolingtest (id integer not null primary key, name varchar(50));
CREATE TABLE testtimestamp (ts timestamp, tz timestamp with time zone);
CREATE TABLE testdbencoding (unicode_ordinal integer primary key not null, unicode_string varchar(100));
--CREATE TABLE allmixedup (id int primary key, "DESCRIPTION" varchar(40), "fOo" varchar(3));
CREATE TABLE texttable (ch char(3), te varchar, vc varchar(3));
CREATE TABLE inttable (a int);
CREATE TABLE numeric_tab (max_numeric_positive numeric, min_numeric_positive numeric, max_numeric_negative numeric, min_numeric_negative numeric, null_value numeric);
CREATE TABLE numeric_tab_3015 (max_val numeric(30,15), min_val numeric(30,15), null_val numeric(30,15));
CREATE TABLE double_tab (max_double float, min_double float, null_value float);
CREATE TABLE float_tab_real (max_float real, min_float real, null_value real);
CREATE TABLE float_tab_double (max_val double, min_val double, null_val double);
--CREATE TABLE float_tab_double (max_val double, min_val double, null_val double);
CREATE TABLE tiny_int (max_val integer, min_val integer, null_val integer);
CREATE TABLE small_int (max_val integer, min_val integer, null_val integer);
CREATE TABLE int_tab (max_val integer, min_val integer, null_val integer);
CREATE TABLE DECIMAL_TAB (max_val numeric(30,15), min_val numeric(30,15), null_val numeric(30,15));
CREATE TABLE decimal_scale (n1 numeric, n2 numeric, n3 numeric, n4 numeric);
CREATE TABLE number_fallback (n1 numeric);
CREATE TABLE batch_tab_threshold5 (id bigint, val bigint);
CREATE TABLE batch_tab_threshold0 (id bigint, val bigint);
--CREATE TABLE batchUpdCnt (id varchar(512) primary key, data varchar(512));
CREATE TABLE create_and_drop_table (user_id int GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY);
--CREATE TABLE create_and_drop_table (user_id int GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY, username VARCHAR (50) NOT NULL, password VARCHAR (50) NOT NULL, email VARCHAR (355) NOT NULL, created_on TIMESTAMP NOT NULL, last_login TIMESTAMP);
CREATE TABLE comparisontest (str1 varchar(5), str2 varchar(15))
